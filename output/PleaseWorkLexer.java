// Generated from PleaseWork.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class PleaseWorkLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, FUNCTION=4, ENDFUNCTION=5, IF=6, THEN=7, ENDIF=8, 
		EQUALS=9, NOTEQUALS=10, GREATERTHAN=11, LESSTHAN=12, GREATER=13, LESS=14, 
		BOOL=15, AND=16, OR=17, XOR=18, NEG=19, READ=20, PRINT=21, TOINT=22, TOREAL=23, 
		ID=24, REAL=25, INT=26, SUB=27, ADD=28, MULT=29, DIV=30, NEWLINE=31, WS=32;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "FUNCTION", "ENDFUNCTION", "IF", "THEN", "ENDIF", 
			"EQUALS", "NOTEQUALS", "GREATERTHAN", "LESSTHAN", "GREATER", "LESS", 
			"BOOL", "AND", "OR", "XOR", "NEG", "READ", "PRINT", "TOINT", "TOREAL", 
			"ID", "REAL", "INT", "SUB", "ADD", "MULT", "DIV", "NEWLINE", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "' = '", "'('", "')'", "'function'", "'endfunction'", "'if'", "'then'", 
			"'endif'", "' == '", "' != '", "' >= '", "' <= '", "' > '", "' < '", 
			null, "' && '", "' || '", "' ^ '", "'!'", "'read '", "'print '", "'(int)'", 
			"'(real)'", null, null, null, "' - '", "' + '", "' * '", "' / '"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, "FUNCTION", "ENDFUNCTION", "IF", "THEN", "ENDIF", 
			"EQUALS", "NOTEQUALS", "GREATERTHAN", "LESSTHAN", "GREATER", "LESS", 
			"BOOL", "AND", "OR", "XOR", "NEG", "READ", "PRINT", "TOINT", "TOREAL", 
			"ID", "REAL", "INT", "SUB", "ADD", "MULT", "DIV", "NEWLINE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PleaseWorkLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PleaseWork.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 31:
			WS_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			 skip(); 
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u0000 \u00f4\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b"+
		"\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0003\u000e\u0092"+
		"\b\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0017\u0004\u0017\u00bf\b\u0017\u000b\u0017\f\u0017\u00c0"+
		"\u0001\u0018\u0003\u0018\u00c4\b\u0018\u0001\u0018\u0004\u0018\u00c7\b"+
		"\u0018\u000b\u0018\f\u0018\u00c8\u0001\u0018\u0001\u0018\u0004\u0018\u00cd"+
		"\b\u0018\u000b\u0018\f\u0018\u00ce\u0001\u0019\u0003\u0019\u00d2\b\u0019"+
		"\u0001\u0019\u0004\u0019\u00d5\b\u0019\u000b\u0019\f\u0019\u00d6\u0001"+
		"\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0003\u001e\u00ea"+
		"\b\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0004\u001f\u00ef\b\u001f"+
		"\u000b\u001f\f\u001f\u00f0\u0001\u001f\u0001\u001f\u0000\u0000 \u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/"+
		"\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? \u0001\u0000"+
		"\u0002\u0002\u0000AZaz\u0002\u0000\t\t  \u00fc\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000"+
		"\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000"+
		"\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000"+
		"1\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001"+
		"\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000"+
		"\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000"+
		"?\u0001\u0000\u0000\u0000\u0001A\u0001\u0000\u0000\u0000\u0003E\u0001"+
		"\u0000\u0000\u0000\u0005G\u0001\u0000\u0000\u0000\u0007I\u0001\u0000\u0000"+
		"\u0000\tR\u0001\u0000\u0000\u0000\u000b^\u0001\u0000\u0000\u0000\ra\u0001"+
		"\u0000\u0000\u0000\u000ff\u0001\u0000\u0000\u0000\u0011l\u0001\u0000\u0000"+
		"\u0000\u0013q\u0001\u0000\u0000\u0000\u0015v\u0001\u0000\u0000\u0000\u0017"+
		"{\u0001\u0000\u0000\u0000\u0019\u0080\u0001\u0000\u0000\u0000\u001b\u0084"+
		"\u0001\u0000\u0000\u0000\u001d\u0091\u0001\u0000\u0000\u0000\u001f\u0093"+
		"\u0001\u0000\u0000\u0000!\u0098\u0001\u0000\u0000\u0000#\u009d\u0001\u0000"+
		"\u0000\u0000%\u00a1\u0001\u0000\u0000\u0000\'\u00a3\u0001\u0000\u0000"+
		"\u0000)\u00a9\u0001\u0000\u0000\u0000+\u00b0\u0001\u0000\u0000\u0000-"+
		"\u00b6\u0001\u0000\u0000\u0000/\u00be\u0001\u0000\u0000\u00001\u00c3\u0001"+
		"\u0000\u0000\u00003\u00d1\u0001\u0000\u0000\u00005\u00d8\u0001\u0000\u0000"+
		"\u00007\u00dc\u0001\u0000\u0000\u00009\u00e0\u0001\u0000\u0000\u0000;"+
		"\u00e4\u0001\u0000\u0000\u0000=\u00e9\u0001\u0000\u0000\u0000?\u00ee\u0001"+
		"\u0000\u0000\u0000AB\u0005 \u0000\u0000BC\u0005=\u0000\u0000CD\u0005 "+
		"\u0000\u0000D\u0002\u0001\u0000\u0000\u0000EF\u0005(\u0000\u0000F\u0004"+
		"\u0001\u0000\u0000\u0000GH\u0005)\u0000\u0000H\u0006\u0001\u0000\u0000"+
		"\u0000IJ\u0005f\u0000\u0000JK\u0005u\u0000\u0000KL\u0005n\u0000\u0000"+
		"LM\u0005c\u0000\u0000MN\u0005t\u0000\u0000NO\u0005i\u0000\u0000OP\u0005"+
		"o\u0000\u0000PQ\u0005n\u0000\u0000Q\b\u0001\u0000\u0000\u0000RS\u0005"+
		"e\u0000\u0000ST\u0005n\u0000\u0000TU\u0005d\u0000\u0000UV\u0005f\u0000"+
		"\u0000VW\u0005u\u0000\u0000WX\u0005n\u0000\u0000XY\u0005c\u0000\u0000"+
		"YZ\u0005t\u0000\u0000Z[\u0005i\u0000\u0000[\\\u0005o\u0000\u0000\\]\u0005"+
		"n\u0000\u0000]\n\u0001\u0000\u0000\u0000^_\u0005i\u0000\u0000_`\u0005"+
		"f\u0000\u0000`\f\u0001\u0000\u0000\u0000ab\u0005t\u0000\u0000bc\u0005"+
		"h\u0000\u0000cd\u0005e\u0000\u0000de\u0005n\u0000\u0000e\u000e\u0001\u0000"+
		"\u0000\u0000fg\u0005e\u0000\u0000gh\u0005n\u0000\u0000hi\u0005d\u0000"+
		"\u0000ij\u0005i\u0000\u0000jk\u0005f\u0000\u0000k\u0010\u0001\u0000\u0000"+
		"\u0000lm\u0005 \u0000\u0000mn\u0005=\u0000\u0000no\u0005=\u0000\u0000"+
		"op\u0005 \u0000\u0000p\u0012\u0001\u0000\u0000\u0000qr\u0005 \u0000\u0000"+
		"rs\u0005!\u0000\u0000st\u0005=\u0000\u0000tu\u0005 \u0000\u0000u\u0014"+
		"\u0001\u0000\u0000\u0000vw\u0005 \u0000\u0000wx\u0005>\u0000\u0000xy\u0005"+
		"=\u0000\u0000yz\u0005 \u0000\u0000z\u0016\u0001\u0000\u0000\u0000{|\u0005"+
		" \u0000\u0000|}\u0005<\u0000\u0000}~\u0005=\u0000\u0000~\u007f\u0005 "+
		"\u0000\u0000\u007f\u0018\u0001\u0000\u0000\u0000\u0080\u0081\u0005 \u0000"+
		"\u0000\u0081\u0082\u0005>\u0000\u0000\u0082\u0083\u0005 \u0000\u0000\u0083"+
		"\u001a\u0001\u0000\u0000\u0000\u0084\u0085\u0005 \u0000\u0000\u0085\u0086"+
		"\u0005<\u0000\u0000\u0086\u0087\u0005 \u0000\u0000\u0087\u001c\u0001\u0000"+
		"\u0000\u0000\u0088\u0089\u0005t\u0000\u0000\u0089\u008a\u0005r\u0000\u0000"+
		"\u008a\u008b\u0005u\u0000\u0000\u008b\u0092\u0005e\u0000\u0000\u008c\u008d"+
		"\u0005f\u0000\u0000\u008d\u008e\u0005a\u0000\u0000\u008e\u008f\u0005l"+
		"\u0000\u0000\u008f\u0090\u0005s\u0000\u0000\u0090\u0092\u0005e\u0000\u0000"+
		"\u0091\u0088\u0001\u0000\u0000\u0000\u0091\u008c\u0001\u0000\u0000\u0000"+
		"\u0092\u001e\u0001\u0000\u0000\u0000\u0093\u0094\u0005 \u0000\u0000\u0094"+
		"\u0095\u0005&\u0000\u0000\u0095\u0096\u0005&\u0000\u0000\u0096\u0097\u0005"+
		" \u0000\u0000\u0097 \u0001\u0000\u0000\u0000\u0098\u0099\u0005 \u0000"+
		"\u0000\u0099\u009a\u0005|\u0000\u0000\u009a\u009b\u0005|\u0000\u0000\u009b"+
		"\u009c\u0005 \u0000\u0000\u009c\"\u0001\u0000\u0000\u0000\u009d\u009e"+
		"\u0005 \u0000\u0000\u009e\u009f\u0005^\u0000\u0000\u009f\u00a0\u0005 "+
		"\u0000\u0000\u00a0$\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005!\u0000\u0000"+
		"\u00a2&\u0001\u0000\u0000\u0000\u00a3\u00a4\u0005r\u0000\u0000\u00a4\u00a5"+
		"\u0005e\u0000\u0000\u00a5\u00a6\u0005a\u0000\u0000\u00a6\u00a7\u0005d"+
		"\u0000\u0000\u00a7\u00a8\u0005 \u0000\u0000\u00a8(\u0001\u0000\u0000\u0000"+
		"\u00a9\u00aa\u0005p\u0000\u0000\u00aa\u00ab\u0005r\u0000\u0000\u00ab\u00ac"+
		"\u0005i\u0000\u0000\u00ac\u00ad\u0005n\u0000\u0000\u00ad\u00ae\u0005t"+
		"\u0000\u0000\u00ae\u00af\u0005 \u0000\u0000\u00af*\u0001\u0000\u0000\u0000"+
		"\u00b0\u00b1\u0005(\u0000\u0000\u00b1\u00b2\u0005i\u0000\u0000\u00b2\u00b3"+
		"\u0005n\u0000\u0000\u00b3\u00b4\u0005t\u0000\u0000\u00b4\u00b5\u0005)"+
		"\u0000\u0000\u00b5,\u0001\u0000\u0000\u0000\u00b6\u00b7\u0005(\u0000\u0000"+
		"\u00b7\u00b8\u0005r\u0000\u0000\u00b8\u00b9\u0005e\u0000\u0000\u00b9\u00ba"+
		"\u0005a\u0000\u0000\u00ba\u00bb\u0005l\u0000\u0000\u00bb\u00bc\u0005)"+
		"\u0000\u0000\u00bc.\u0001\u0000\u0000\u0000\u00bd\u00bf\u0007\u0000\u0000"+
		"\u0000\u00be\u00bd\u0001\u0000\u0000\u0000\u00bf\u00c0\u0001\u0000\u0000"+
		"\u0000\u00c0\u00be\u0001\u0000\u0000\u0000\u00c0\u00c1\u0001\u0000\u0000"+
		"\u0000\u00c10\u0001\u0000\u0000\u0000\u00c2\u00c4\u0005-\u0000\u0000\u00c3"+
		"\u00c2\u0001\u0000\u0000\u0000\u00c3\u00c4\u0001\u0000\u0000\u0000\u00c4"+
		"\u00c6\u0001\u0000\u0000\u0000\u00c5\u00c7\u000209\u0000\u00c6\u00c5\u0001"+
		"\u0000\u0000\u0000\u00c7\u00c8\u0001\u0000\u0000\u0000\u00c8\u00c6\u0001"+
		"\u0000\u0000\u0000\u00c8\u00c9\u0001\u0000\u0000\u0000\u00c9\u00ca\u0001"+
		"\u0000\u0000\u0000\u00ca\u00cc\u0005.\u0000\u0000\u00cb\u00cd\u000209"+
		"\u0000\u00cc\u00cb\u0001\u0000\u0000\u0000\u00cd\u00ce\u0001\u0000\u0000"+
		"\u0000\u00ce\u00cc\u0001\u0000\u0000\u0000\u00ce\u00cf\u0001\u0000\u0000"+
		"\u0000\u00cf2\u0001\u0000\u0000\u0000\u00d0\u00d2\u0005-\u0000\u0000\u00d1"+
		"\u00d0\u0001\u0000\u0000\u0000\u00d1\u00d2\u0001\u0000\u0000\u0000\u00d2"+
		"\u00d4\u0001\u0000\u0000\u0000\u00d3\u00d5\u000209\u0000\u00d4\u00d3\u0001"+
		"\u0000\u0000\u0000\u00d5\u00d6\u0001\u0000\u0000\u0000\u00d6\u00d4\u0001"+
		"\u0000\u0000\u0000\u00d6\u00d7\u0001\u0000\u0000\u0000\u00d74\u0001\u0000"+
		"\u0000\u0000\u00d8\u00d9\u0005 \u0000\u0000\u00d9\u00da\u0005-\u0000\u0000"+
		"\u00da\u00db\u0005 \u0000\u0000\u00db6\u0001\u0000\u0000\u0000\u00dc\u00dd"+
		"\u0005 \u0000\u0000\u00dd\u00de\u0005+\u0000\u0000\u00de\u00df\u0005 "+
		"\u0000\u0000\u00df8\u0001\u0000\u0000\u0000\u00e0\u00e1\u0005 \u0000\u0000"+
		"\u00e1\u00e2\u0005*\u0000\u0000\u00e2\u00e3\u0005 \u0000\u0000\u00e3:"+
		"\u0001\u0000\u0000\u0000\u00e4\u00e5\u0005 \u0000\u0000\u00e5\u00e6\u0005"+
		"/\u0000\u0000\u00e6\u00e7\u0005 \u0000\u0000\u00e7<\u0001\u0000\u0000"+
		"\u0000\u00e8\u00ea\u0005\r\u0000\u0000\u00e9\u00e8\u0001\u0000\u0000\u0000"+
		"\u00e9\u00ea\u0001\u0000\u0000\u0000\u00ea\u00eb\u0001\u0000\u0000\u0000"+
		"\u00eb\u00ec\u0005\n\u0000\u0000\u00ec>\u0001\u0000\u0000\u0000\u00ed"+
		"\u00ef\u0007\u0001\u0000\u0000\u00ee\u00ed\u0001\u0000\u0000\u0000\u00ef"+
		"\u00f0\u0001\u0000\u0000\u0000\u00f0\u00ee\u0001\u0000\u0000\u0000\u00f0"+
		"\u00f1\u0001\u0000\u0000\u0000\u00f1\u00f2\u0001\u0000\u0000\u0000\u00f2"+
		"\u00f3\u0006\u001f\u0000\u0000\u00f3@\u0001\u0000\u0000\u0000\n\u0000"+
		"\u0091\u00c0\u00c3\u00c8\u00ce\u00d1\u00d6\u00e9\u00f0\u0001\u0001\u001f"+
		"\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}